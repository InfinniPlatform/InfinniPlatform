using System;

namespace InfinniPlatform.Core.Serialization
{
    /// <summary>
    /// Обработчик ошибок сериализации и десериализации.
    /// </summary>
    /// <remarks>
    /// Если требуется, чтобы некоторые ошибки сериализации и десериализации объектов были проигнорированы, необходимо
    /// реализовать интерфейс <see cref="ISerializerErrorHandler" /> и зарегистрировать реализацию в контейнере зависимостей.
    /// При возникновении ошибки сериализации или десериализации осуществляется вызов метода <see cref="Handle" /> у каждого
    /// из зарегистрированных обработчиков до тех пор, пока один из них не вернет значение <c>true</c>, означающее окончание
    /// обработки ошибки. При этом порядок вызова обработчиков в общем случае не гарантируется. Если ошибка в конечном счете
    /// обработана (метод <see cref="Handle" /> одного из обработчиков вернул <c>true</c>), то как в случае сериализации, так
    /// и в случае десериализации значением свойства, на котором произошла ошибка, будет считаться <c>null</c>.
    /// </remarks>
    public interface ISerializerErrorHandler
    {
        /// <summary>
        /// Обрабатывает ошибку и возвращает признак окончания ее обработки.
        /// </summary>
        /// <param name="target">Объект, на котором произошла ошибка.</param>
        /// <param name="member">Свойство, на котором произошла ошибка.</param>
        /// <param name="error">Исключение с информацией об ошибке.</param>
        /// <returns>
        /// Возвращает <c>true</c>, если ошибка была обработана и вызов других обработчиков не требуется, иначе - <c>false</c>.
        /// </returns>
        bool Handle(object target, object member, Exception error);
    }
}