using System;

namespace InfinniPlatform.MessageQueue
{
	/// <summary>
	/// Сервис для управления подписками на очереди сообщений.
	/// </summary>
	public interface IMessageQueueManager
	{
		/// <summary>
		/// Получить точку обмена сообщениями с типом "Fanout".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Fanout".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Fanout" осуществляется от издателя во все очереди, связанные с точкой обмена.
		/// </remarks>
		IExchangeFanoutBinding GetExchangeFanout(string name);

		/// <summary>
		/// Создать точку обмена сообщениями с типом "Fanout".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <param name="config">Метод для настройки свойств точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Fanout".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Fanout" осуществляется от издателя во все очереди, связанные с точкой обмена.
		/// </remarks>
		IExchangeFanoutBinding CreateExchangeFanout(string name, Action<IExchangeConfig> config = null);


		/// <summary>
		/// Получить точку обмена сообщениями с типом "Direct".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Direct".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Direct" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие ключ маршрутизации, который совпадает с ключом маршрутизации, указанным при отправке сообщения.
		/// </remarks>
		IExchangeDirectBinding GetExchangeDirect(string name);

		/// <summary>
		/// Создать точку обмена сообщениями с типом "Direct".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <param name="config">Метод для настройки свойств точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Direct".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Direct" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие ключ маршрутизации, который совпадает с ключом маршрутизации, указанным при отправке сообщения.
		/// </remarks>
		IExchangeDirectBinding CreateExchangeDirect(string name, Action<IExchangeConfig> config = null);


		/// <summary>
		/// Получить точку обмена сообщениями с типом "Topic".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Topic".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Topic" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие шаблон маршрутизации, которому удовлетворяет ключ маршрутизации, указанный при отправке сообщения.
		/// </remarks>
		IExchangeTopicBinding GetExchangeTopic(string name);

		/// <summary>
		/// Создать точку обмена сообщениями с типом "Topic".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <param name="config">Метод для настройки свойств точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Topic".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Topic" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие шаблон маршрутизации, которому удовлетворяет ключ маршрутизации, указанный при отправке сообщения.
		/// </remarks>
		IExchangeTopicBinding CreateExchangeTopic(string name, Action<IExchangeConfig> config = null);


		/// <summary>
		/// Получить точку обмена сообщениями с типом "Headers".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Headers".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Headers" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие заголовок маршрутизации, который совпадает с заголовком маршрутизации, указанным при отправке сообщения.
		/// </remarks>
		IExchangeHeadersBinding GetExchangeHeaders(string name);

		/// <summary>
		/// Создать точку обмена сообщениями с типом "Headers".
		/// </summary>
		/// <param name="name">Наименование точки обмена.</param>
		/// <param name="config">Метод для настройки свойств точки обмена.</param>
		/// <returns>Интерфейс для объявления очередей, связанных с точкой обмена сообщениями типа "Headers".</returns>
		/// <remarks>
		/// Маршрутизация сообщений для точек обмена с типом "Headers" осуществляется от издателя во все очереди, связанные с точкой обмена и
		/// имеющие заголовок маршрутизации, который совпадает с заголовком маршрутизации, указанным при отправке сообщения.
		/// </remarks>
		IExchangeHeadersBinding CreateExchangeHeaders(string name, Action<IExchangeConfig> config = null);
	}
}