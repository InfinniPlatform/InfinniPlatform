<?xml version="1.0" encoding="utf-8" ?>
<autofac>
  <components>
    <component
      type = "InfinniPlatform.Runtime.Factories.ScriptFactory, InfinniPlatform.Runtime"
      service="InfinniPlatform.Factories.IScriptFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Index.ElasticSearch.Implementation.ElasticProviders.IndexQueryExecutor, InfinniPlatform.Index.ElasticSearch"
      service="InfinniPlatform.Api.Index.IIndexQueryExecutor, InfinniPlatform.Api"
      instance-scope="per-dependency"/>
    <component
      type = "InfinniPlatform.Index.ElasticSearch.Factories.ElasticFactory, InfinniPlatform.Index.ElasticSearch"
      service="InfinniPlatform.Api.Index.IIndexFactory, InfinniPlatform.Api"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.SystemConfig.RoutingFactory.RoutingFactoryBase, InfinniPlatform.SystemConfig"
      service="InfinniPlatform.Factories.IIndexRoutingFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Logging.Log4NetLogFactory, InfinniPlatform.Core"
      service="InfinniPlatform.Logging.ILogFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Cassandra.Client.CassandraDatabaseFactory, InfinniPlatform.Cassandra"
      service="InfinniPlatform.Cassandra.IColumnFamilyDatabaseFactory, InfinniPlatform.Cassandra"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.EventStorage.CassandraEventStorageFactory, InfinniPlatform.EventStorage"
      service="InfinniPlatform.Factories.IEventStorageFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Transactions.TransactionManager, InfinniPlatform.Core"
      service="InfinniPlatform.Api.Transactions.ITransactionManager, InfinniPlatform.Api"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.BlobStorage.CassandraBlobStorageFactory, InfinniPlatform.BlobStorage"
      service="InfinniPlatform.Factories.IBlobStorageFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Reporting.PrintView.FlowDocumentPrintViewBuilderFactory, InfinniPlatform.Reporting"
      service="InfinniPlatform.Factories.IPrintViewBuilderFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.ClientNotification.SignalRWebClientNotificationServiceFactory, InfinniPlatform.ClientNotification"
      service="InfinniPlatform.Factories.IWebClientNotificationServiceFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Factories.GlobalContext, InfinniPlatform.Core"
      service="InfinniPlatform.Api.Context.IGlobalContext, InfinniPlatform.Api"
      instance-scope="per-dependency"/>
    <component
      type = "InfinniPlatform.Runtime.Factories.ScriptFactoryBuilder, InfinniPlatform.Runtime"
      service="InfinniPlatform.Factories.IScriptFactoryBuilder, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Runtime.Implementation.ChangeListeners.ChangeListener, InfinniPlatform.Runtime"
      service="InfinniPlatform.Runtime.IChangeListener, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Sql.DapperSqlQueryExecutorFactory, InfinniPlatform.Sql"
      service="InfinniPlatform.Factories.ISqlQueryExecutorFactory, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.WebApi.Factories.HttpResultHandlerFactory, InfinniPlatform.WebApi"
      service="InfinniPlatform.WebApi.IHttpResultHandlerFactory, InfinniPlatform.WebApi"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Metadata.Implementation.MetadataConfiguration.MetadataConfigurationProvider, InfinniPlatform.Metadata"
      service="InfinniPlatform.Metadata.IMetadataConfigurationProvider, InfinniPlatform.Core"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Metadata.Implementation.MetadataConfiguration.ConfigurationObjectBuilder, InfinniPlatform.Metadata"
      service="InfinniPlatform.Api.Metadata.IConfigurationObjectBuilder, InfinniPlatform.Api"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Metadata.Implementation.MetadataConfiguration.CrossConfigSearcher, InfinniPlatform.Metadata"
      service="InfinniPlatform.Api.Factories.ICrossConfigSearcher, InfinniPlatform.Api"
      instance-scope="single-instance"/>
    <component
      type = "InfinniPlatform.Metadata.Implementation.MetadataConfiguration.ScriptConfiguration, InfinniPlatform.Metadata"
      service="InfinniPlatform.Api.Actions.IScriptConfiguration, InfinniPlatform.Api"
      instance-scope="per-dependency"/>
    <component
      type = "InfinniPlatform.Compression.GZipDataCompressor, InfinniPlatform.Core"
      service="InfinniPlatform.Compression.IDataCompressor, InfinniPlatform.Core"
      instance-scope="per-dependency"/>
  </components>
</autofac>