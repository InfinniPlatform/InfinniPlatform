<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmbiguousServiceDefinitionError" xml:space="preserve">
    <value>Ambiguous service definition!</value>
  </data>
  <data name="InstanceIsNotAnObject" xml:space="preserve">
    <value>Экземпляр не является типом объекта (например, массив)</value>
  </data>
  <data name="ServiceNotFoundError" xml:space="preserve">
    <value>Service not registered! Please check type of request (GET,POST) and name of invoked service instance.</value>
  </data>
  <data name="DocumentContentSuccessfullyUploaded" xml:space="preserve">
    <value>Document content successfully uploaded</value>
  </data>
  <data name="DocumentMoveContextType" xml:space="preserve">
    <value>Document move context</value>
  </data>
  <data name="DocumentMoveResultContext" xml:space="preserve">
    <value>Document move result context</value>
  </data>
  <data name="DocumentFilterEventContext" xml:space="preserve">
    <value>Document filter events context</value>
  </data>
  <data name="DocumentSearchContext" xml:space="preserve">
    <value>Document search context</value>
  </data>
  <data name="FileUploadContext" xml:space="preserve">
    <value>File upload context</value>
  </data>
  <data name="IncorrectConfigurationName" xml:space="preserve">
    <value>Configuration name should be on the latin and can't include special characters</value>
  </data>
  <data name="QueryMetadataProviderNotFound" xml:space="preserve">
    <value>query provider for specified metadata not found. </value>
  </data>
  <data name="ConfigurationNameNotSpecified" xml:space="preserve">
    <value>Configuration name not specified!</value>
  </data>
  <data name="IndexNameShouldNotBeEmpty" xml:space="preserve">
    <value>index name should not be empty.</value>
  </data>
  <data name="ErrorConfigNameIsEmpty" xml:space="preserve">
    <value>Configuration name is empty</value>
  </data>
  <data name="ErrorMetadataContainerUndefined" xml:space="preserve">
    <value>Undefined configuration metadata container type</value>
  </data>
  <data name="ErrorAccessDeniedByIdentifier" xml:space="preserve">
    <value>Access to configuration object by identifier denied</value>
  </data>
  <data name="MetadataNameNotSpecified" xml:space="preserve">
    <value>Metadata name not specified.</value>
  </data>
  <data name="DocumentMetadataNotFound" xml:space="preserve">
    <value>document metadata with name "{0}" not found.</value>
  </data>
  <data name="MetadataContainerForSpecifiedTypeNotFound" xml:space="preserve">
    <value>Metadata container for specified metadata type not found.</value>
  </data>
  <data name="ErrorMetadataManagerForTypeNotFound" xml:space="preserve">
    <value>Metadata manager for specified type not found.</value>
  </data>
  <data name="ConfigurationIdShouldNotBeEmpty" xml:space="preserve">
    <value>Configuration id should not be empty.</value>
  </data>
  <data name="GeneratorNameShouldNotBeEmpty" xml:space="preserve">
    <value>Generator name should not be empty.</value>
  </data>
  <data name="ActionUnitShouldNotBeEmpty" xml:space="preserve">
    <value>Action unit should not be empty.</value>
  </data>
  <data name="MetadataIdShouldNotBeEmpty" xml:space="preserve">
    <value>Metadata id should not be empty.</value>
  </data>
  <data name="MetadataTypeForGeneratorShouldNotBeEmpty" xml:space="preserve">
    <value>Metadata type for generator should not be empty.</value>
  </data>
  <data name="GeneratorMetadataPartialChangesNotSupported" xml:space="preserve">
    <value>Generator metadata not support partial metadata changes.</value>
  </data>
  <data name="GeneratorMetadataCantBeReplaced" xml:space="preserve">
    <value>Generator metadata can't be replaced, should be inserted or deleted only.</value>
  </data>
  <data name="GeneratorMetadataChangeCollectionItemIndexNotSupported" xml:space="preserve">
    <value>Generator metadata change collection item index not supported while.</value>
  </data>
  <data name="DocumentIdShouldNotBeEmpty" xml:space="preserve">
    <value>Document identifier should not be empty.</value>
  </data>
  <data name="StateUpdaterShouldNotBeEmpty" xml:space="preserve">
    <value>State updater should not be empty.</value>
  </data>
  <data name="StateValidatorShouldNotBeEmpty" xml:space="preserve">
    <value>State validator should not be empty.</value>
  </data>
  <data name="SuccessActionShouldNotBeEmpty" xml:space="preserve">
    <value>Sucess action should not be empty.</value>
  </data>
  <data name="FailActionShouldNotBeEmpty" xml:space="preserve">
    <value>Fail action should not be empty.</value>
  </data>
  <data name="InappropriateItemMapping" xml:space="preserve">
    <value>Fail to index item: object has incorrect and inappropriate structure for current index type mapping.</value>
  </data>
  <data name="ErrorParsingJsonConfiguration" xml:space="preserve">
    <value>Error in parsing JSON configuration</value>
  </data>
  <data name="PropertyPathCannotBeNullOrEmpty" xml:space="preserve">
    <value>Property path cannot be null or empty.</value>
  </data>
  <data name="TargetObjectCannotBeNull" xml:space="preserve">
    <value>Target object cannot be null.</value>
  </data>
  <data name="CollectionCanNotBeModified" xml:space="preserve">
    <value>Collection cannot be modified.</value>
  </data>
  <data name="CannotDeserializeTypeError" xml:space="preserve">
    <value>Cannot deserialize type '{0}'.</value>
  </data>
  <data name="NameIsAlreadyAdded" xml:space="preserve">
    <value>Name is already added.</value>
  </data>
  <data name="TypeIsAlreadyAdded" xml:space="preserve">
    <value>Type is already added.</value>
  </data>
  <data name="TypeShouldHaveDefaultConstructor" xml:space="preserve">
    <value>Type should have default constructor.</value>
  </data>
  <data name="TypeShouldNotBeAbstract" xml:space="preserve">
    <value>Type should not be abstract.</value>
  </data>
  <data name="ErrorIncorrectViewMetadataType" xml:space="preserve">
    <value>View metadata {0} has another metadata type. Metadata type: {1}, query metadata type: {2}.</value>
  </data>
  <data name="ValidatorNotFound" xml:space="preserve">
    <value>Validator not found.</value>
  </data>
  <data name="MemberWasNotFoundOrCannotBeInvoked" xml:space="preserve">
    <value>Member '{0}' was not found or cannot be invoked.</value>
  </data>
  <data name="FailCreateRequestLocal" xml:space="preserve">
    <value>Can't create request local without controller factory</value>
  </data>
  <data name="CantParseIQLQuery" xml:space="preserve">
    <value>Can't parse IQL query</value>
  </data>
  <data name="RegisterActionShouldNotBeEmpty" xml:space="preserve">
    <value>Register action should not be empty.</value>
  </data>
  <data name="ExecutableFileNotFound" xml:space="preserve">
    <value>Executable file not found.</value>
  </data>
  <data name="AttemptAttachToTestServer" xml:space="preserve">
    <value>Attempt attach to test server: {0}.</value>
  </data>
  <data name="CannotAttachToTestServer" xml:space="preserve">
    <value>Cannot attach to test server.</value>
  </data>
  <data name="SchemaDoesNotContainIdProperty" xml:space="preserve">
    <value>JSON Schema does not contain 'id' property: '{0}'.</value>
  </data>
  <data name="SchemaIncorrectOrNotDeclared" xml:space="preserve">
    <value>JSON Schema is incorrect or not declared: '{0}'.</value>
  </data>
  <data name="SchemaIsAlreadyDeclared" xml:space="preserve">
    <value>JSON Schema '{0}' is already declared: '{1}'.</value>
  </data>
  <data name="SchemaPathInfo" xml:space="preserve">
    <value> Path '{0}'.</value>
  </data>
  <data name="UrlEncodedDataProcessingComplete" xml:space="preserve">
    <value>Url encoded data processing completed.</value>
  </data>
  <data name="ActionFailedWithException" xml:space="preserve">
    <value>Action '{0}' failed with exception: {1}</value>
  </data>
  <data name="ErrorsValidationFailedWithException" xml:space="preserve">
    <value>Errors validation failed with exception: {0}</value>
  </data>
  <data name="ServerErrorsValidationFailedWithException" xml:space="preserve">
    <value>Server errors validation failed with exception: {0}</value>
  </data>
  <data name="ServerWarningsValidationFailedWithException" xml:space="preserve">
    <value>Server warnings validation failed with exception: {0}</value>
  </data>
  <data name="WarningsValidationFailedWithException" xml:space="preserve">
    <value>Warnings validation failed with exception: {0}</value>
  </data>
  <data name="DeleteActionShouldNotBeEmpty" xml:space="preserve">
    <value>Delete action should not be empty.</value>
  </data>
  <data name="CantAddUnsavedUserToRole" xml:space="preserve">
    <value>Can't add unsaved user to role</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User with Id '{0}' not found in persistent storage</value>
  </data>
  <data name="CantRemoveUnsavedUserFromRole" xml:space="preserve">
    <value>Can't remove unsaved user from role.</value>
  </data>
  <data name="AuthorizationPointShouldNotBeEmpty" xml:space="preserve">
    <value>Authorization action should not be empty.</value>
  </data>
  <data name="AccessDeniedToConfiguration" xml:space="preserve">
    <value>User "{0}" access denied to configuration "{1}".</value>
  </data>
  <data name="AccessDeniedToDocument" xml:space="preserve">
    <value>User "{0}" access denied to configuration "{1}", document "{2}".</value>
  </data>
  <data name="AccessDeniedToAction" xml:space="preserve">
    <value>User "{0}" access denied to configuration "{1}", document "{2}", action "{3}". </value>
  </data>
  <data name="ComplexAuthorizationShouldNotBeEmpty" xml:space="preserve">
    <value>Complex authorization action should not be empty.</value>
  </data>
  <data name="ConfigurationAndUserNameShouldNotBeEmptyForGrantAccess" xml:space="preserve">
    <value>Configuration and UserName should not be empty on grant access.</value>
  </data>
  <data name="AccessDeniedToDocumentInstance" xml:space="preserve">
    <value>User "{0}" access denied to configuration "{1}", document "{2}", action "{3}", record with identifier "{4}"</value>
  </data>
  <data name="FailToSetUserAccess" xml:space="preserve">
    <value>Fail to set user access: {0}</value>
  </data>
  <data name="FailToApplyAccessRole" xml:space="preserve">
    <value>Fail to grant access role: {0}</value>
  </data>
  <data name="CantRemoveUserFromAdminRole" xml:space="preserve">
    <value>Can't remove user from role admin or no one user will be admin.</value>
  </data>
  <data name="ConfigurationReferencedInObjectNotFound" xml:space="preserve">
    <value>Configuration "{0}" referenced in "{1}" not found.</value>
  </data>
  <data name="ValueIsNotIdentifiersList" xml:space="preserve">
    <value>Value is not a list of identifiers</value>
  </data>
  <data name="NoItemSelected" xml:space="preserve">
    <value>No item selected.</value>
  </data>
  <data name="NeedToSelectItem" xml:space="preserve">
    <value>Need select inspected item</value>
  </data>
  <data name="ConfirmDeleteDocument" xml:space="preserve">
    <value>Are you sure you want to delete element {0}? </value>
  </data>
  <data name="NeedConfirm" xml:space="preserve">
    <value>Need confirm</value>
  </data>
  <data name="CantRemoveItemFromParent" xml:space="preserve">
    <value>Can't remove item from parent</value>
  </data>
  <data name="FailToRemoveParent" xml:space="preserve">
    <value>Fail to remove</value>
  </data>
  <data name="ClipboardIsEmpty" xml:space="preserve">
    <value>Clipboard is empty.</value>
  </data>
  <data name="Warnings" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="PropertyShouldntBeEmpty" xml:space="preserve">
    <value>{0} property of {1} should'nt be empty.</value>
  </data>
  <data name="CredentialsActionShouldNotBeEmpty" xml:space="preserve">
    <value>Credentials action should not be empty</value>
  </data>
  <data name="BusinessLogicError" xml:space="preserve">
    <value>Business logic error.</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal server error.</value>
  </data>
  <data name="RemoteServerNotFound" xml:space="preserve">
    <value>Remote server not found.</value>
  </data>
  <data name="ServiceNotRegistered" xml:space="preserve">
    <value>Service not registered.</value>
  </data>
  <data name="UnsatisfiedVersionNumber" xml:space="preserve">
    <value>UnsatifiedAppVersion</value>
  </data>
  <data name="DocumentNotFound" xml:space="preserve">
    <value>Document with identifier "{0}" not found.</value>
      </data>

  <data name="BinaryContentMaxSizeIsExceed" xml:space="preserve">
    <value>Binary content max size {0} is exceed.</value>
  </data>
  <data name="DocumentDeletedSuccessfully" xml:space="preserve">
    <value>Document with identifier "{0}" deleted successfully</value>
  </data>
  <data name="DocumentProviderTypeNotFound" xml:space="preserve">
    <value>document provider for type "{0}" not found.</value>
  </data>
  <data name="LogDocumentDeleted" xml:space="preserve">
    <value>document "{0}" deleted</value>
  </data>
  <data name="SessionCreatedSuccessfully" xml:space="preserve">
    <value>Session created successfully</value>
  </data>
  <data name="DocumentAttachedSuccessfully" xml:space="preserve">
    <value>Document attached successfully.</value>
  </data>
  <data name="SessionIdAndDocumentShouldntBeEmpty" xml:space="preserve">
    <value>SessionId and Document should'nt be empty.</value>
  </data>
  <data name="BatchCompletedSuccessfully" xml:space="preserve">
    <value>Batch completed successfully</value>
  </data>
  <data name="DeletedDocumentsIdentifiersShouldNotBeNull" xml:space="preserve">
    <value>Deleted documents identifiers list must be not null.</value>
  </data>
  <data name="NotAllRequestParamsAreSpecified" xml:space="preserve">
    <value>Not all request params are specified.</value>
  </data>
  <data name="IncorrectDownloadRequest" xml:space="preserve">
    <value>Incorrect file download request.</value>
  </data>
  <data name="InstanceNotFoundToAttachFile" xml:space="preserve">
    <value>Instance not found to attach file. InstanceId: {0}</value>
  </data>
  <data name="FileAttachedSuccessfully" xml:space="preserve">
    <value>File attached successfully.</value>
  </data>
  <data name="NotAllRequestParamsAreFiled" xml:space="preserve">
    <value>Not all request parameters are filed.</value>
  </data>
  <data name="UserCreatedSuccessfully" xml:space="preserve">
    <value>User created successfully</value>
  </data>
  <data name="UnableToFindUser" xml:space="preserve">
    <value>Unable to find user with user name: {0}</value>
  </data>
  <data name="UnknownRouteSection" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="ClaimRemovedSuccessfully" xml:space="preserve">
    <value>Claim removed successfully</value>
  </data>
  <data name="UserToRemoveClaimNotFound" xml:space="preserve">
    <value>User "{0}" not found.</value>
  </data>
  <data name="CantGetSpecificConfigurationWithoutVersion" xml:space="preserve">
    <value>Can't get specific configuration without specification of configuration version</value>
  </data>
  <data name="SolutionNotFound" xml:space="preserve">
    <value>Solution with name "{0}" and version "{1} not found".</value>
  </data>
  <data name="SolutionAssembliesSuccessfullyUploaded" xml:space="preserve">
    <value>Solution assemblies successfully updated.</value>
  </data>
  <data name="DoesNotAllowedToSetVersion" xml:space="preserve">
    <value>Does not allowed to set relevant version to user {0}.</value>
  </data>
  <data name="FailToGetIrrelevantVersions" xml:space="preserve">
    <value>Fail to get irrelevant versions for user: "{0}"</value>
  </data>
  <data name="ApplicationNotFound" xml:space="preserve">
    <value>Application with name {0} and version {1} not found. </value>
  </data>
  <data name="MetadataElementNotFound" xml:space="preserve">
    <value>Metadata element with identifier {0} and version {1} not found.</value>
  </data>
	<data name="FailToConvertFilterValueToDateTime" xml:space="preserve">
    <value>Fail to convert value to datetime format: {0}</value>
  </data>
</root>